name: Deploy FreelanceHub

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        npm run install:all
    
    - name: Run tests
      run: |
        npm run test
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/freelancehub_test
        JWT_SECRET: test-jwt-secret-for-testing-only
    
    - name: Build client
      run: npm run build
    
    - name: Health check
      run: |
        npm start &
        sleep 10
        npm run health

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        npm run install:all
    
    - name: Build application
      run: npm run build
    
    - name: Create deployment artifact
      run: |
        tar -czf freelancehub-${{ github.sha }}.tar.gz \
          --exclude=node_modules \
          --exclude=.git \
          --exclude=client/node_modules \
          --exclude=server/node_modules \
          .
    
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: freelancehub-build
        path: freelancehub-${{ github.sha }}.tar.gz

  deploy-docker:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/freelancehub:latest
          ${{ secrets.DOCKER_USERNAME }}/freelancehub:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-vercel:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install Vercel CLI
      run: npm install -g vercel
    
    - name: Deploy to Vercel
      run: vercel --prod --token ${{ secrets.VERCEL_TOKEN }}
      env:
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

  notify:
    needs: [deploy-docker, deploy-vercel]
    runs-on: ubuntu-latest
    if: always() && github.ref == 'refs/heads/main'
    
    steps:
    - name: Notify deployment status
      run: |
        if [ "${{ needs.deploy-docker.result }}" == "success" ] || [ "${{ needs.deploy-vercel.result }}" == "success" ]; then
          echo "✅ Deployment successful!"
        else
          echo "❌ Deployment failed!"
          exit 1
        fi
